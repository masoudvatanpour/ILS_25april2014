This folder contains various scripts for parsing the floorplan, generating 
activity scripts and arbitrary traces, mobility heatmaps and sensor placement.

A recommended order of running the scripts:

1. convertFloorplan.png
    this script reads floorplan.png image and outputs data structures used later 
    by other scripts. The image has to be saved with 32-bit colors and has to be
    colored using a color scheme declared in config.php (or if using a different
    color scheme or color depth - redeclare it there). Files Walls.txt and 
    Obstacles.tst can be used by the projects Localizer and Simulator respectively.

2. produceActivityScript.php
    this script takes as input a number of destinations (i.e. objects visited by
    the walking agent) and a name of a mobility model (declared in config.php) 
    and outputs a randomized sequence of destinations such that the frequency of
    appearance of specific objects in it follows the distribution of weights 
    assigned to these objects in a mobility model.

3. produceTrace.php
    this scripts takes as input the activity script generated by the previous
    script and produces a trace as a sequence of tuples <timestamp  x   y>.
    The file with a trace can be used in Simulator project.

4. produceHeatmap.php
    this script generates a heatmap of frequency of visitation of certain areas
    of the floorplan based on the mobility model inputted. Different mobility
    models are declared in the config.php, please adjust them to your taste.
    This script is very time-consuming, depending on the type of a  model, can 
    take between 10 minutes and 2 hours. It produces two types of heat score
    files: one is a simple accumulative score of visitation frequencies, and
    the other one is a "smoothed" heat score (gets rid of isolated empty
    cells - evens out the color across the heatmap).

5. placeSensors.php
    this script takes a score file generated by the previous script as input and
    generates an optimized sensor placement. It can take both a raw score file
    or a smoothed version of it (recommended). It can also produce manual and
    randomized placements, and in that case it does not need a score file.
    The first time you run this script, it will take about 10 minutes to generate
    data structures with information about all possible sensor positions and
    the ray-trace coverage. All subsequent runs will take considerably shorter
    amount of time. If you have a local web-server, you can run this script
    in a web-browser window; useful for generating manual and random placement
    since the resulting image will be immediately displayed in the browser.
    Example URLs (assuming folder Optimization lies in the ROOT web-directory):
    http://localhost/Optimization/placeSensors.php?type=manual&number=11
        to generate a manual placement with 11 sensors
    http://localhost/Optimization/placeSensors.php?type=random&number=10
        to generate a randomized placement with 10 sensors
    http://localhost/Optimization/placeSensors.php?type=random&number=10&suffix=1
        to generate a randomized placement with 10 sensors and add a suffix ".1"
        to various file names (sensor config files, images, etc.) - useful for 
        generating multiple placements for the same number of sensors.
    The resulting files with sensor configuration (named Sensors<something here>.txt)
    is ready to be used with the Localizer project.


Each script can be run as follows:
>php <name of a script> <arguments>

if you run the script without arguments, it will print usage info.
It is important to run these scripts with a php interpreter built with a GD support
(graphical library). 

If you want to generate traces only, follow steps 1 -> 2 -> 3
If you want to generate only optimized placements, follow steps 1 -> 4 -> 5
If you want to generate only manual or randomized placements, follow steps 1 -> 5
    